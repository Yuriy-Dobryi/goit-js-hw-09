{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aACAC,EAAAC,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,OACVC,QAAS,GACTC,aAAc,OACdC,QAAS,IACTC,cAAc,IAGhB,IAAMC,EAAUC,SAASC,cAAc,SACAC,EAEtCC,EAAAf,EAAA,CAFsCY,SAASI,iBAC9C,iEACD,GAFMC,EAAgCH,EAEtC,GAFgBI,EAAsBJ,EAEtC,GAFyBK,EAAaL,EAEtC,GAiBD,SAASM,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAzBPX,EAAQmB,iBAAiB,UAAU,SAAAC,GACjCA,EAAEC,iBAKF,IAJA,IAAIC,EAAQC,OAAOjB,EAASkB,OACtBC,EAAOF,OAAOhB,EAAQiB,OACtBE,EAASH,OAAOf,EAAUgB,OAEvBG,EAAQ,EAAGA,GAASD,EAAQC,GAAS,EAAGL,GAASG,EACxDhB,EAAckB,EAAOL,GAClBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OACjBpB,EAAAC,OAAOsC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAC5DqB,OAAI,SAAAH,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,M,OAClBpB,EAAAC,OAAOyC,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nNotify.init({\n  width: '300px',\n  distance: '20px',\n  opacity: 0.9,\n  borderRadius: '50px',\n  timeout: 3000,\n  clickToClose: true,\n});\n\nconst formRef = document.querySelector('.form');\nconst [delayRef, stepRef, amountRef] = document.querySelectorAll(\n  'input[name=\"delay\"], input[name=\"step\"], input[name=\"amount\"]'\n);\n\nformRef.addEventListener('submit', e => {\n  e.preventDefault();\n  let delay = Number(delayRef.value);\n  const step = Number(stepRef.value);\n  const amount = Number(amountRef.value);\n\n  for (let index = 1; index <= amount; index += 1, delay += step) {\n    createPromise(index, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`))\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$1t1Wn","parcelRequire","$6JpON","Notify","init","width","distance","opacity","borderRadius","timeout","clickToClose","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$ref","$parcel$interopDefault","querySelectorAll","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","index","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.d1a149b8.js.map"}